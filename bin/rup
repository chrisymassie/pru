#!/usr/bin/env ruby
require 'rubygems'
require 'optparse'

$LOAD_PATH << File.join(File.dirname(__FILE__), '..', 'lib')
require 'rup'

options = {}
OptionParser.new do |opts|
  opts.banner = <<BANNER
Ruby pipe helper

Use ruby in your pipes, forget about grep / sed / awk / wc ...

Map works on each line as String
Reduce works on all lines as Array (optional or via -r)

Usage:
    something | rup 'map' ['reduce']
    something | rup -r 'reduce'

Options:
BANNER
  opts.on("-r", "--reduce S","reduce via") {|s| options[:reduce] = s }
  opts.on("-h", "--help","Show this.") { puts opts; exit }
  opts.on('-v', '--version','Show Version'){ puts Rup::VERSION; exit}
end.parse!

map, reduce = ARGV
reduce ||= options[:reduce]
map = nil if map and map.empty?

if map and not reduce
  Rup.map($stdin, map){|x| puts x }
elsif map and reduce
  results = []
  Rup.map($stdin, map){|x| results << x }
  puts Rup.reduce(results, reduce)
elsif reduce
  puts Rup.reduce($stdin.read.split("\n"), reduce)
end
